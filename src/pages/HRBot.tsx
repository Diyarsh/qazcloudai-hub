import { useState, useEffect } from "react";
import { Send, Paperclip, Bot, User, Loader2, FileText, Settings, Mic, Building, Users } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { useChatHistory } from "@/hooks/useChatHistory";
import { useAuth } from "@/hooks/useAuth";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { useNavigate } from "react-router-dom";

export default function HRBot() {
  const [inputMessage, setInputMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [uploadedFile, setUploadedFile] = useState<string | null>(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const navigate = useNavigate();

  const { user } = useAuth();
  const {
    chatSessions,
    currentSessionId,
    getCurrentSession,
    createNewChat,
    addMessage
  } = useChatHistory();

  useEffect(() => {
    // Auto-start HR bot conversation
    if (!currentSessionId) {
      const sessionId = createNewChat("HR-–±–æ—Ç –¥–ª—è –°–∞–º—Ä—É–∫-–ö–∞–∑—ã–Ω–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
      addMessage(sessionId, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HR-–±–æ—Ç –°–∞–º—Ä—É–∫-–ö–∞–∑—ã–Ω–∞!\n\nüîπ –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:\n‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –æ—Ç–ø—É—Å–∫–æ–≤ –∏ –±–æ–ª—å–Ω–∏—á–Ω—ã—Ö\n‚Ä¢ –í–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ –∏ –ª—å–≥–æ—Ç–∞–º\n‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º\n‚Ä¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏\n‚Ä¢ –û–±—É—á–µ–Ω–∏–µ–º –∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–µ–π\n\n–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!", false);
    }
  }, []);

  const handleFileUpload = (type: 'document' | 'audio') => {
    const fileName = type === 'document' ? 'hr_policy.pdf' : 'meeting_audio.mp3';
    setUploadedFile(fileName);
    setIsAnalyzing(true);
    
    const sessionId = currentSessionId || createNewChat(`–ó–∞–≥—Ä—É–∂–µ–Ω ${type === 'document' ? '–¥–æ–∫—É–º–µ–Ω—Ç' : '–∞—É–¥–∏–æ—Ñ–∞–π–ª'}: ${fileName}`);
    
    if (type === 'document') {
      addMessage(sessionId, `üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: ${fileName}`, true);
    } else {
      addMessage(sessionId, `üé§ –ó–∞–≥—Ä—É–∂–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª: ${fileName}`, true);
    }
    
    // Simulate analysis
    setTimeout(() => {
      setIsAnalyzing(false);
      if (type === 'document') {
        addMessage(sessionId, "üìä –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!\n\nüìã –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ:\n‚Ä¢ HR –ø–æ–ª–∏—Ç–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ 2024 –≥–æ–¥—É\n‚Ä¢ 15 –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Ç–ø—É—Å–∫–æ–≤\n‚Ä¢ –ù–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã –∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏\n\nüí° –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞!", false);
      } else {
        addMessage(sessionId, "üéØ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –∞—É–¥–∏–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìù –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n‚Ä¢ –û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö HR –ø–æ–ª–∏—Ç–∏–∫\n‚Ä¢ –ü–ª–∞–Ω—ã –ø–æ –æ–±—É—á–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–∞ Q4\n‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏\n‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n\nüìã –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é –∏–ª–∏ –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ?", false);
      }
    }, 2000);
  };

  const handleSendMessage = async () => {
    if (!inputMessage.trim() || isLoading) return;
    
    let sessionId = currentSessionId;
    if (!sessionId) {
      sessionId = createNewChat(inputMessage);
    }

    addMessage(sessionId, inputMessage, true);
    setInputMessage("");
    setIsLoading(true);

    // HR-specific responses
    setTimeout(() => {
      const hrResponses = [
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∑–∞ 2 –Ω–µ–¥–µ–ª–∏ –¥–æ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞. –ù—É–∂–Ω–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∏ HR-–æ—Ç–¥–µ–ª–∞.",
        "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –æ—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤. –ó–∞—Ä–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ—Ç—Å—è 15 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞. –°–ø—Ä–∞–≤–∫–∏ –æ –¥–æ—Ö–æ–¥–∞—Ö –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.",
        "–ë–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å–ª—É–∂–±—É –∫–æ–º–ø–∞–Ω–∏–∏. –ü–µ—Ä–≤—ã–µ 3 –¥–Ω—è –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º, –¥–∞–ª–µ–µ - –∏–∑ —Ñ–æ–Ω–¥–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è.",
        "–î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–Ω–µ—à–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è. –ó–∞—è–≤–∫–∏ –ø–æ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–æ 25 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞.",
        "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ª—å–≥–æ—Ç—ã –≤–∫–ª—é—á–∞—é—Ç: –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ, –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é –ø–∏—Ç–∞–Ω–∏—è, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –ª—å–≥–æ—Ç—ã –Ω–∞ –æ—Ç–¥—ã—Ö –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∏—Ö —Å–µ–º–µ–π."
      ];
      
      const randomResponse = hrResponses[Math.floor(Math.random() * hrResponses.length)];
      addMessage(sessionId!, `üíº ${randomResponse}\n\nüìû –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:\n‚Ä¢ HR-—Å–ª—É–∂–±–∞: +7 (727) 244-XXXX\n‚Ä¢ Telegram: @samruk_hr_bot\n‚Ä¢ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç: portal.samruk-kazyna.kz`, false);
      setIsLoading(false);
    }, 1500);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const currentMessages = getCurrentSession()?.messages || [];

  const quickActions = [
    { text: "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–ø—É—Å–∫?", icon: "üèñÔ∏è" },
    { text: "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ", icon: "üí∞" },
    { text: "–ë–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç", icon: "üè•" },
    { text: "–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ", icon: "üìö" },
    { text: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ª—å–≥–æ—Ç—ã", icon: "üéÅ" },
    { text: "–ê–¥–∞–ø—Ç–∞—Ü–∏—è –Ω–æ–≤–∏—á–∫–æ–≤", icon: "üëã" }
  ];

  return (
    <div className="h-screen flex flex-col bg-background">
      {/* HR Bot Header */}
      <div className="border-b bg-card px-6 py-4">
        <div className="max-w-4xl mx-auto flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-primary/10 rounded-lg">
              <Building className="h-6 w-6 text-primary" />
            </div>
            <div>
              <h1 className="text-xl font-bold">HR-–±–æ—Ç –°–∞–º—Ä—É–∫-–ö–∞–∑—ã–Ω–∞</h1>
              <p className="text-sm text-muted-foreground">–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∫–∞–¥—Ä–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º</p>
            </div>
          </div>
          <Badge variant="outline" className="bg-green-500/10 text-green-600 border-green-500/20">
            <Users className="h-3 w-3 mr-1" />
            –ê–∫—Ç–∏–≤–µ–Ω
          </Badge>
        </div>
      </div>

      {/* Chat Messages */}
      <div className="flex-1 overflow-hidden">
        <ScrollArea className="h-full">
          <div className="max-w-4xl mx-auto px-6 py-8">
            {currentMessages.length > 1 && (
              <div className="space-y-6">
                {currentMessages.slice(1).map((message, index) => (
                  <div key={index} className={`flex gap-4 ${message.isUser ? "justify-end" : "justify-start"}`}>
                    {!message.isUser && (
                      <Avatar className="h-8 w-8 mt-1">
                        <AvatarFallback className="bg-gradient-to-r from-primary to-primary/80 text-primary-foreground">
                          <Building className="h-4 w-4" />
                        </AvatarFallback>
                      </Avatar>
                    )}
                    
                    <div className={`max-w-[80%] rounded-lg px-4 py-3 ${
                      message.isUser ? "bg-primary text-primary-foreground ml-auto" : "bg-muted"
                    }`}>
                      {uploadedFile && message.content.includes(uploadedFile) && (
                        <div className="flex items-center gap-2 mb-2 p-2 bg-primary/10 rounded-lg">
                          {message.content.includes('üé§') ? (
                            <Mic className="h-4 w-4 text-primary" />
                          ) : (
                            <FileText className="h-4 w-4 text-primary" />
                          )}
                          <span className="text-sm font-medium">{uploadedFile}</span>
                        </div>
                      )}
                      
                      <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                      <div className="mt-2">
                        <span className="text-xs opacity-70">
                          {message.timestamp.toLocaleTimeString([], {
                            hour: '2-digit',
                            minute: '2-digit'
                          })}
                        </span>
                      </div>
                    </div>

                    {message.isUser && (
                      <Avatar className="h-8 w-8 mt-1">
                        <AvatarFallback className="bg-secondary">
                          <User className="h-4 w-4" />
                        </AvatarFallback>
                      </Avatar>
                    )}
                  </div>
                ))}
                
                {isLoading && (
                  <div className="flex gap-4 justify-start">
                    <Avatar className="h-8 w-8 mt-1">
                      <AvatarFallback className="bg-gradient-to-r from-primary to-primary/80 text-primary-foreground">
                        <Building className="h-4 w-4" />
                      </AvatarFallback>
                    </Avatar>
                    <div className="bg-muted rounded-lg px-4 py-3">
                      <div className="flex items-center gap-2">
                        <Loader2 className="h-4 w-4 animate-spin" />
                        <span className="text-sm text-muted-foreground">HR-–±–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...</span>
                      </div>
                    </div>
                  </div>
                )}

                {isAnalyzing && (
                  <div className="flex gap-4 justify-start">
                    <Avatar className="h-8 w-8 mt-1">
                      <AvatarFallback className="bg-gradient-to-r from-primary to-primary/80 text-primary-foreground">
                        <Building className="h-4 w-4" />
                      </AvatarFallback>
                    </Avatar>
                    <div className="bg-muted rounded-lg px-4 py-3">
                      <div className="flex items-center gap-2">
                        <Loader2 className="h-4 w-4 animate-spin" />
                        <span className="text-sm text-muted-foreground">
                          {uploadedFile?.includes('mp3') ? '–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É—é –∞—É–¥–∏–æ...' : '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–æ–∫—É–º–µ–Ω—Ç...'}
                        </span>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}
            
            {/* Quick Actions */}
            {currentMessages.length <= 1 && (
              <div className="mt-8">
                <h3 className="text-lg font-medium mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {quickActions.map((action, index) => (
                    <Button
                      key={index}
                      variant="outline"
                      className="justify-start h-auto p-4 text-left"
                      onClick={() => {
                        setInputMessage(action.text);
                        setTimeout(handleSendMessage, 100);
                      }}
                    >
                      <span className="mr-3 text-lg">{action.icon}</span>
                      {action.text}
                    </Button>
                  ))}
                </div>
              </div>
            )}
          </div>
        </ScrollArea>
      </div>

      {/* Input Area */}
      <div className="border-t bg-background">
        <div className="max-w-4xl mx-auto p-6">
          <div className="relative">
            <div className="absolute left-3 bottom-2 z-10">
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" size="icon" className="h-8 w-8 hover:bg-muted">
                    <Paperclip className="h-4 w-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="start" className="w-56">
                  <DropdownMenuItem 
                    className="bg-primary/10 text-primary font-medium"
                    onClick={() => handleFileUpload('document')}
                  >
                    üìé –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
                    <Badge variant="secondary" className="ml-auto text-xs">PDF, DOCX</Badge>
                  </DropdownMenuItem>
                  <DropdownMenuItem 
                    className="bg-primary/10 text-primary font-medium"
                    onClick={() => handleFileUpload('audio')}
                  >
                    üé• –í–∏–¥–µ–æ
                    <Badge variant="secondary" className="ml-auto text-xs">MP4, AVI</Badge>
                  </DropdownMenuItem>
                  <DropdownMenuItem>
                    üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </div>
            
            <Textarea
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å HR-–±–æ—Ç—É..."
              className="min-h-[80px] max-h-[200px] resize-none pl-12 pr-12 transition-all duration-300"
              rows={2}
              disabled={isLoading}
            />
            
            <div className="absolute right-3 bottom-2">
              <Button
                onClick={handleSendMessage}
                disabled={!inputMessage.trim() || isLoading}
                size="icon"
                className="h-8 w-8"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}